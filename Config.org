#+TITLE: Armagedon Config
#+PROPERTY: header-args :tangle config.el

* Introduction
Welcome!
This is peronal (doom) emacs config by Urban Avsec. In chance you stumbled on this
config before the end of the world, plese feel free to re-use this armagedon config
as you would like.

** Commit the update
After changing this file, don't forget to commit.
1. Refresh the buffer with: ~C-C C-C~
2. Tangle the file with:    ~C-c C-v t~


* Who am I?
Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets.

#+BEGIN_SRC emacs-lisp
(setq user-full-name "Urban Avsec"
      user-mail-address "urban.avsec@outlook.com")
#+END_SRC

* Emacs Style - Let's make emacs pretty (or at least not ugly)
** General Theme
To load a theme provided by doom use ~doom-theme~ directive. If a custom theme has been
installed, I might need to load it using ~load-theme~.

#+BEGIN_SRC emacs-lisp
(setq doom-theme 'doom-gruvbox-light)
#+END_SRC

** Line Numbers
I like to see the relative line numbers. It also eases with jumping.
#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type 'relative)
#+END_SRC

* Sane Editiong Controls
Use visual lines to move up and down instead of actual lines.
#+begin_src emacs-lisp
(after! evil
  (map! :n "j" 'evil-next-visual-line
        :n "k" 'evil-previous-visual-line))
#+end_src

* Org - My life organized
** General Org
#+BEGIN_SRC emacs-lisp
(setq org-directory "~/iCloud/3. MyBrain")

(after! org
  (setq org-startup-with-inline-images t)
  (setq org-todo-keywords
        '((sequence "TODO(t)" "NEXT(n)" "WAIT(w@/!)" "LEARN(l)" "|" "DONE(d!)" "CANCEL(c@)"))))
#+END_SRC

** Org Ref
#+BEGIN_SRC emacs-lisp
(use-package! org-ref
  :config
  (setq
   org-ref-completion-library 'org-ref-ivy-cite
   org-ref-get-pdf-filename-function 'org-ref-get-pdf-filename-help-bibtex
   org-ref-default-bibliography (list "~/iCloud/Library/Library.bib")))

(after! org-ref
  (setq
   bibtex-completion-notes-path "~/iCloud/3. MyBrain/SourceNotes/"
   bibtex-completion-bibliography "~/iCLoud/Library/Library.bib"
   bibtex-completion-pdf-field "file"))
#+END_SRC

** Org Roam
Org Roam is my knowledge system and repository. It lives in my iCloud.
#+BEGIN_SRC emacs-lisp
(use-package! org-roam
    :after org
    :init
    (map! :leader
          (:prefix-map ("n" . "notes")
           (:prefix ("r" . "roam")
            :desc "Find Roam Node"                      "/" #'org-roam-node-find
            :desc "Insert the Roam Link"                "i" #'org-roam-node-insert
            :desc "Sync Org Roam DB"                    "s" #'org-roam-db-sync
            :desc "Toggle Org Roam buffer"              "t" #'org-roam-buffer-toggle)))

    ;; Sets the Ack so that warning is not issued
    (setq org-roam-v2-ack t)

    :config
    (setq
     org-roam-directory "~/iCloud/3. MyBrain"
     org-roam-dailies-directory "~/iCloud/3. MyBrain/Dailies")
    (org-roam-setup))

(after! org-roam
  (setq org-roam-capture-templates
        '(("n" "Default Note" plain "%?"
           :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org"
                              "#+TITLE: ${title}\n")
           :unnarrowed t)
          ("s" "Source Note" plain "%?"
           :if-new (file+head "LiteratureNotes/${citekey}.org"
                              "#+TITLE: ${title}\n")
           :unnarrowed t))))
#+END_SRC

** Org Roam Bibtex
#+BEGIN_SRC emacs-lisp
(use-package! org-roam-bibtex
  :after org-roam
  :hook (org-roam-mode . org-roam-bibtex-mode)
  :config)
#+END_SRC

#+RESULTS:
